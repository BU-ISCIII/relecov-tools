name: test_modules

on:
  push:
    branches: "**"
  pull_request:
    types: [opened, reopened, synchronize]
    branches: "**"

jobs:
  test_map:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        map_args: ["-d 'ENA' -f relecov_tools/schema/ena_schema.json", "-d 'GISAID' -f relecov_tools/schema/gisaid_schema.json"]
    steps:
    - name: Set up Python 3.9.16
      uses: actions/setup-python@v3
      with:
        python-version: '3.9.16'

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Install package and dependencies
      run: |
        pip install -r requirements.txt
        pip install .
    - name: Run each module tests
      run: |
        relecov-tools map -j tests/data/map_validate/processed_metadata_lab_test.json -p relecov_tools/schema/relecov_schema.json ${{ matrix.map_args }} -o .
      env:
        OUTPUT_LOCATION: ${{ github.workspace }}/tests/
    - name: Upload output file
      uses: actions/upload-artifact@v4
      with:
        name: test-output
        path: output.txt

  test_all_modules:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        modules: 
        - "read-lab-metadata"
        - "read-bioinfo-metadata"
        - "validate"
        - "build-schema"
    env:
      OUTPUT_LOCATION: ${{ github.workspace }}/tests/

    steps:
    - name: Set up Python 3.9.16
      uses: actions/setup-python@v3
      with:
        python-version: '3.9.16'

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Install package and dependencies
      run: |
        pip install -r requirements.txt
        pip install .

    - name: Run read-lab-metadata module
      if: matrix.modules == 'read-lab-metadata'
      run: |
        relecov-tools read-lab-metadata \
          -m tests/data/read_lab_metadata/metadata_lab_test.xlsx \
          -s tests/data/read_lab_metadata/samples_data_test.json \
          -o $OUTPUT_LOCATION

    - name: Run validate module (default)
      if: matrix.modules == 'validate'
      run: |
        relecov-tools validate \
          -j tests/data/map_validate/processed_metadata_lab_test.json \
          -s relecov_tools/schema/relecov_schema.json \
          -m tests/data/map_validate/metadata_lab_test.xlsx \
          -r tests/data/map_validate/unique_sampleid_registry.json \
          -o $OUTPUT_LOCATION

    - name: Run build-schema module
      if: matrix.modules == 'build-schema'
      run: |
        relecov-tools build-schema \
          -i tests/data/build_schema/metadata_mapping_file.xlsx \
          --version $SCHEMA_DEFAULT_VERSION \
          --project $PROJECT_NAME \
          --non-interactive \
          -o $OUTPUT_LOCATION
      env:
        SCHEMA_DEFAULT_VERSION: "3.0.0"
        PROJECT_NAME: "relecov"

    - name: Upload output file
      uses: actions/upload-artifact@v4
      with:
        name: test-output
        path: ${{ github.workspace }}/output.txt
